#!/usr/bin/env elixir

defmodule CursorEncoder do
  def encode(id) do
    id = String.to_integer(id)
    cursor = ~s({"last_id":#{id},"last_value":#{id}})
    Base.encode64(cursor)
  end

  def copy_to_clipboard(text) do
    case :os.type() do
      {:unix, :darwin} ->
        Port.open({:spawn, "pbcopy"}, [:binary])
        |> Port.command(text)
      {:unix, _} ->
        Port.open({:spawn, "xclip -selection clipboard"}, [:binary])
        |> Port.command(text)
      _ ->
        IO.puts("Unsupported operating system for clipboard operations")
    end
  end
end

case System.argv() do
  [id | _] ->
    encoded = CursorEncoder.encode(id)
    CursorEncoder.copy_to_clipboard(encoded)
    IO.puts(~s["#{encoded}" copied to clipboard])
  [] ->
    IO.puts("Error: Please provide an ID to encode")
end